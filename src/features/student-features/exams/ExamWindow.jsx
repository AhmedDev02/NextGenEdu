import styled from "styled-components";
import Button from "../../../ui/Button";
import { useSubmitQuiz } from "./useSubmitQuiz";
import { useParams } from "react-router-dom";
import { useSelector } from "react-redux";

const StyledExamModal = styled.div`
  height: auto;
  width: 100%;
  padding: 2rem;
  text-align: center;
  display: flex;
  flex-direction: column;
  gap: 2rem;
`;
const H5 = styled.h5`
  text-align: center;
`;
const H4 = styled.h4`
  text-align: center;
`;
const Divider = styled.div`
  display: flex;
  justify-content: space-between;
`;
const text = `
                  Ù‡Ù„ Ø£Ù†Øª Ù…ØªØ£ÙƒØ¯ Ù…Ù† Ø£Ù†Ùƒ ØªØ±ÙŠØ¯ Ø¥Ø±Ø³Ø§Ù„ Ø¬Ù…ÙŠØ¹ Ø¥Ø¬Ø§Ø¨Ø§ØªÙƒ ÙˆØ¥Ù†Ù‡Ø§Ø¡ Ø§Ù„ÙƒÙˆÙŠØ²ØŸ ØªØ£ÙƒØ¯ Ù…Ù†
              Ù…Ø±Ø§Ø¬Ø¹Ø© Ø¬Ù…ÙŠØ¹ Ø§Ù„Ø£Ø³Ø¦Ù„Ø© Ù‚Ø¨Ù„ Ø§Ù„Ø¥Ø±Ø³Ø§Ù„. Ø§Ø¶ØºØ· "ØªØ£ÙƒÙŠØ¯" Ù„Ø¥Ø±Ø³Ø§Ù„ Ø§Ù„Ø¥Ø¬Ø§Ø¨Ø§ØªØŒ Ø£Ùˆ
              "Ø¥Ù„ØºØ§Ø¡" Ù„Ù„Ø¹ÙˆØ¯Ø© ÙˆÙ…Ø±Ø§Ø¬Ø¹ØªÙ‡Ø§.
`;

function ExamWindow({ onCloseModal, onConfirm, answers }) {
  const { examId } = useParams();
  const allAnswers = useSelector((state) => state.answers?.[examId] || {});
  const { mutate: submitQuiz, isPending, isSuccess, error } = useSubmitQuiz();

  const handleSubmit = () => {
    const formattedAnswers = Object.entries(answers).map(
      ([questionId, answerId]) => ({
        question: questionId,
        answer: answerId,
      })
    );

    submitQuiz(
      { quizId: examId, answers: formattedAnswers },
      {
        onSuccess: () => {
          onConfirm?.(); // Optional callback
        },
        onError: (err) => {
          console.error("Submission failed", err);
        },
      }
    );
  };
  return (
    <StyledExamModal>
      <H4> ðŸ”” Ø¥Ø±Ø³Ø§Ù„ Ø¬Ù…ÙŠØ¹ Ø§Ù„Ø¥Ø¬Ø§Ø¨Ø§Øª ÙˆØ§Ù„Ø¥Ù†Ù‡Ø§Ø¡ØŸ</H4>
      <H5> {text}</H5>
      <Divider>
        <Button variation="primary" size="small" onClick={handleSubmit}>
          ØªØ£ÙƒÙŠØ¯
        </Button>
        <Button variation="transparent" size="small" onClick={onCloseModal}>
          Ø¥Ù„ØºØ§Ø¡
        </Button>
      </Divider>
    </StyledExamModal>
  );
}

export default ExamWindow;
